#!/usr/bin/env zsh
# usage: hooks/copy_to_config [--resolve VAR] | [--reset] [[--from-stdin] FILE...]
# --resolve VAR print value of variable
# --from-stdin	use stdin instead of file data (file still should exist)
# --reset		delete previous configs for new files & update .zshrc
# FILE			filename relative to $HOME/.dotfiles/config

# parse .ini var files add print vars
addvars() {
	section=""
	keys=""
	while IFS='' read line; do
		if [[ "$line" == "" || "${line:0:1}" == ";" || "${line:0:1}" == "#" ]]; then
			continue
		fi
		if [[ "${line:0:1}" == "[" ]]; then
			if [[ "$section" != "" ]]; then
				echo "vars[$section]=\"${keys:1}\""
			fi
			keys=""
			section="$(echo "$line" | cut -c2- | rev | cut -c2- | rev)"
			continue
		fi
		key="$(echo "$line" | cut -d= -f1)"
		val="$(echo "$line" | cut -d= -f2)"
		keys="$keys $key"
		echo "vars[$section.$key]=\"$val\""
	done
	if [[ "$section" != "" ]]; then
		echo "vars[$section]=\"${keys:1}\""
	fi
}

# apply vars to config
process() {
	if [[ "$1" == "--from-stdin" ]]; then
		cat >"$datapath/tmpbuf.1"
	else
		cat "$2" >"$datapath/tmpbuf.1"
	fi
	cat "$datapath/tmpbuf.1" >"$datapath/tmpbuf"
	for key in $(cat "$datapath/tmpbuf.1" | grep -o "\${[^}]\+}" | tr -d "\${}"); do
		val="$(echo ${vars[$key]} | sed 's/\//\\\//g')"
		if [[ "$val" == "" ]]; then
			echo "Bad keyword in $1: <$key>"
			exit 1
		fi
		sed -i "s/\${$key}/$val/g" "$datapath/tmpbuf"
	done
	cat "$datapath/tmpbuf"
	rm "$datapath/tmpbuf"
}

# copy file to config
copy() {
	src="$(readlink -m "$HOME/.dotfiles/config/$2")"
	dst="$(readlink -m "$HOME/.config/$2")"
	echo "$f"
	if [ ! -f "$src" ]; then
		echo "Bad filename: $2"
		exit 1
	fi
	mkdir -p $(dirname "$dst")
	if [[ $(grep "$dst" "$datapath/managed_files" 2>/dev/null) == "" ]]; then
		echo "$dst" >>"$datapath/managed_files"
	fi
	process "$1" "$src" >"$dst"
	chmod --reference="$src" "$dst"
}

# read variables
varfiles=($HOME/.dotfiles/var.ini $HOME/.dotfiles/local.ini)
datapath="$HOME/.dotfiles/.data"
mkdir -p "$datapath"
typeset -A vars
for f in $varfiles; do
	if [ -f "$f" ]; then
		eval "$(addvars <"$f")"
	fi
done

if [[ $1 == "--resolve" ]]; then
	echo ${vars[$2]}
	exit
fi

if [[ $1 == "--reset" ]]; then
	if [ -f "$datapath/managed_files" ]; then
		while read file; do
			rm -f "$file"
		done <"$datapath/managed_files"
		rm "$datapath/managed_files"
	fi

	if [ ! -f "$HOME/.zshrc" ] || [[ $(grep 'source "$HOME/.config/zsh/profile.zsh"' "$HOME/.zshrc") == "" ]]; then
		echo "updating ~/.zshrc" >&2
		echo 'source "$HOME/.config/zsh/profile.zsh"' >>~/.zshrc
	fi
	shift 1
fi

if [[ $# != 0 ]]; then
	from_stdin=""
	for f in "$@"; do
		if [[ "$f" == "--from-stdin" ]]; then
			from_stdin="$f"
			continue
		fi
		copy "$from_stdin" "$f"
		from_stdin=""
	done
else
	for f in $(cd "$HOME/.dotfiles/config/"; find . -type f); do
		copy "" "$f"
	done
fi
